[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nanopub"
description = "Python client for Nanopublications"
readme = "README.md"
requires-python = ">=3.6"
license = { file = "LICENSE" }
authors = [
    { name = "Robin Richardson", email = "r.richardson@esciencecenter.nl" },
    { name = "Djura Smits" },
    { name = "Sven van den Burg" },
    # { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
]
keywords = [
    "Nanopublication",
    "RDF",
    "Linked Data",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]

dynamic = ["version"]

dependencies = [
    "rdflib <7.0.0,>=6.0.0",
    # "rdflib <6.0.0,>=5.0.0",
    "requests",
    "click >=7.1.2",
    "yatiml",
    "pycryptodome >=3.15.0",
    # "trustyuri@git+https://github.com/trustyuri/trustyuri-python.git@master"
]

[project.scripts]
np = "nanopub.__main__:cli"

[project.optional-dependencies]
test = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=2.12.0,<4.0.0",
    "coveralls",
    "mypy ==0.971",
    "black == 22.8.0",
    "isort >=5.0.6,<6.0.0",
    "flake8 >=3.8.3,<6.0.0",
    "Flake8-pyproject>=1.1.0.post0",
    "flaky",
]
doc = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.2.7,<9.0.0",
    "mkdocstrings[python] >=0.18.1",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "jinja2 ==3.0.3",

    "recommonmark",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-tabs",
]
dev = [
    "mypy ==0.971",
    "uvicorn[standard] >=0.12.0,<0.19.0",
    "pre-commit >=2.17.0,<3.0.0",
    "autoflake >=1.4.0,<2.0.0",

    "types-PyYAML",
    "types-requests",
]


[project.urls]
Homepage = "https://github.com/fair-workflows/nanopub"
Documentation = "https://nanopub.readthedocs.io"
History = "https://github.com/fair-workflows/nanopub/releases"
Tracker = "https://github.com/fair-workflows/nanopub/issues"
Source = "https://github.com/fair-workflows/nanopub"



[tool.hatch.version]
path = "nanopub/_version.py"

# [tool.hatch.metadata]
# allow-direct-references = true

# https://hatch.pypa.io/dev/config/build/#file-selection
# [tool.hatch.build]
# artifacts = [
#   "bin/*",
#   "lib/*",
# ]
# https://hatch.pypa.io/dev/config/build/#forced-inclusion
# [tool.hatch.build.targets.wheel.force-include]
# "lib" = "lib"
# "bin" = "bin"
# [tool.hatch.build.targets.wheel.shared-data]
# "lib" = "lib"
# "bin" = "bin"
# data_files=[
#     ('lib', ['lib/nanopub-1.33-jar-with-dependencies.jar']),
#     ('bin', ['bin/nanopub-java', 'bin/nanopub-java.bat'])
# ],


[tool.isort]
line_length = 120
skip = ["nanopub/__init__.py"]
# profile = "black"
# known_third_party = ["nanopub", "trusty_uri"]


[tool.coverage.run]
source = ["project"]
branch = true

[tool.coverage.report]
omit = ["nanopub/templates/*"]

[tool.flake8]
max-complexity = 10
max-line-length = 100
per-file-ignores = [
    "__init__.py:F401",
]
# ignore = ["E203", "E501", "W503", "E303"]


[tool.mypy]
strict = false
disallow_untyped_defs = false
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = false
warn_unused_ignores = true


[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true



# Trying out env from hatch https://hatch.pypa.io
[tool.hatch.envs.default]
features = [
  "test",
  "doc",
  "dev",
]
# post-install-commands = [
#   "pre-commit install",
# ]

# hatch run test
[tool.hatch.envs.default.scripts]
run = "./scripts/run.sh"
test = "./scripts/test.sh"
docs = "./scripts/docs-serve.sh"
docs-sphinx = "./scripts/docs-sphinx.sh"
format = "./scripts/format.sh"
lint = "./scripts/lint.sh"



[tool.hatch.envs.test]
features = [
  "test",
]

[tool.hatch.envs.test.scripts]
all = "./scripts/test.sh"
# cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=nanopub --cov=tests"
# no-cov = "cov --no-cov"


[[tool.hatch.envs.test.matrix]]
python = ["36", "37", "38", "39", "310", "311"]


[tool.pytest.ini_options]
markers = [
    "no_rsa_key: mark a test as a test only run when there is no nanopub RSA key setup.",
]
# filterwarnings = [
#     "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning:pyRdfa",
#     "ignore:It looks like you're parsing an XML document using an HTML parser.*:bs4.XMLParsedAsHTMLWarning:bs4"
# ]
# addopts = [
#   "--strict-config",
#   "--strict-markers",
# ]
# xfail_strict = true
# junit_family = "xunit2"



# [tool.coverage.run]
# branch = true
# parallel = true
# omit = [
#   "nanopub/__init__.py",
# ]

# [tool.coverage.report]
# exclude_lines = [
#   "no cov",
#   "if __name__ == .__main__.:",
#   "if TYPE_CHECKING:",
# ]
